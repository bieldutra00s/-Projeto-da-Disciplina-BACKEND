import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;
import java.util.Optional;

@Service
public class GeneroService {
    private final GeneroRepository generoRepository;

    @Autowired
    public GeneroService(GeneroRepository generoRepository) {
        this.generoRepository = generoRepository;
    }

    // Método para criar um novo gênero
    public Genero criarGenero(Genero genero) {
        return generoRepository.save(genero);
    }

    // Método para buscar um gênero pelo ID
    public Optional<Genero> buscarGeneroPorId(Long id) {
        return generoRepository.findById(id);
    }

    // Método para atualizar um gênero existente
    public Genero atualizarGenero(Genero genero) {
        return generoRepository.save(genero);
    }

    // Método para deletar um gênero pelo ID
    public void deletarGeneroPorId(Long id) {
        generoRepository.deleteById(id);
    }

    // Método para buscar todos os gêneros
    public List<Genero> buscarTodosGeneros() {
        return generoRepository.findAll();
    }
}

@Service
public class FilmeService {
    private final FilmeRepository filmeRepository;

    @Autowired
    public FilmeService(FilmeRepository filmeRepository) {
        this.filmeRepository = filmeRepository;
    }

    // Método para criar um novo filme
    public Filme criarFilme(Filme filme) {
        return filmeRepository.save(filme);
    }

    // Método para buscar um filme pelo ID
    public Optional<Filme> buscarFilmePorId(Long id) {
        return filmeRepository.findById(id);
    }

    // Método para atualizar um filme existente
    public Filme atualizarFilme(Filme filme) {
        return filmeRepository.save(filme);
    }

    // Método para deletar um filme pelo ID
    public void deletarFilmePorId(Long id) {
        filmeRepository.deleteById(id);
    }

    // Método para buscar todos os filmes
    public List<Filme> buscarTodosFilmes() {
        return filmeRepository.findAll();
    }
}
